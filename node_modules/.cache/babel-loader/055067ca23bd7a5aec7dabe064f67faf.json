{"ast":null,"code":"import _toConsumableArray from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectSpread from \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dwarikay/Downloads/chat-mate-master/client-in-React/src/components/SampleComponent.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport SockJsClient from \"react-stomp\";\nimport UsernameGenerator from \"username-generator\";\nimport Fetch from \"json-fetch\";\nimport { TalkBox } from \"react-talk\";\nimport { Button } from \"@material-ui/core\";\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment';\nimport \"../chatContainer.css\";\n\nvar randomstring = require(\"randomstring\");\n\nvar styles = function styles(theme) {\n  return {\n    root: _objectSpread({}, theme.mixins.gutters(), {\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2\n    }),\n    button: {\n      margin: theme.spacing.unit\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit\n    },\n    rightIcon: {\n      marginLeft: 0,\n      marginTop: 3\n    },\n    iconSmall: {\n      fontSize: 20\n    }\n  };\n};\n\nvar SampleComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SampleComponent, _React$Component);\n\n  function SampleComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SampleComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleComponent).call(this, props)); // randomUserId is used to emulate a unique user id for this demo usage\n\n    _this.onMessageReceive = function (msg, topic) {\n      var username = _this.state.username;\n\n      _this.setState(function (prevState) {\n        return {\n          messagesReceived: [].concat(_toConsumableArray(prevState.messagesReceived), [msg])\n        };\n      });\n    };\n\n    _this.randomUserName = UsernameGenerator.generateUsername(\"-\");\n    _this.randomUserId = randomstring.generate();\n    _this.sendUser = _this.sendUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      clientConnected: false,\n      messages: [],\n      messagesReceived: [],\n      incomingMsgs: [],\n      outgoingMsgs: [],\n      sentUser: false,\n      username: \"\",\n      userList: [],\n      messageList: [],\n      welcomemsg: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SampleComponent, [{\n    key: \"onConnect\",\n    value: function onConnect() {\n      this.setState({\n        clientConnected: true\n      });\n      /*var url = stompClient.ws._transport.url;\n      url = url.replace(\n          \"ws://localhost:8080/spring-security-mvc-socket/secured/room/\",  \"\");\n      url = url.replace(\"/websocket\", \"\");\n      url = url.replace(/^[0-9]+\\//, \"\");\n      console.log(\"Your current session is: \" + url);\n      sessionId = url;*/\n    }\n  }, {\n    key: \"sendUser\",\n    value: function sendUser(e) {\n      e.preventDefault();\n      var username = this.userId.value.trim();\n      var outgoingmsgs = this.state.outgoingMsgs;\n      outgoingmsgs.push(username);\n      this.setState({\n        outgoingMsgs: outgoingmsgs,\n        sentUser: true,\n        username: username\n      }); //this.clientRef.sendMessage(\"/app/register\", JSON.stringify({user: username, type: 'JOIN'}));\n      //this.clientRef.sendMessage(\"/secured/chat\", JSON.stringify({sender: username, type: 'JOIN'}));\n      // this.userName.value = \"\";\n      // this.clientRef.sendMessage(\"/user/\"+ username +\"/queue/position-updates\", JSON.stringify({user: username, type: 'JOIN'}));\n\n      this.clientRef.sendMessage(\"/app/user\", JSON.stringify({\n        username: username\n      }));\n\n      this.clientRef._subscribe(\"/topic/\" + username);\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(e) {\n      e.preventDefault();\n      var msg = this.inputText.value.trim();\n      var username = this.state.username;\n\n      if (msg) {\n        this.clientRef.sendMessage(\"/app/message\", JSON.stringify({\n          message: msg,\n          user: username\n        }));\n        this.inputText.value = '';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var messagesReceived = this.state.messagesReceived;\n      var username = this.state.username;\n      var date = new Date();\n      return React.createElement(\"div\", {\n        className: \"container chatContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mesgs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msg_history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, messagesReceived && messagesReceived.map(function (eachincoming) {\n        return eachincoming.username !== undefined ? eachincoming.username !== username && React.createElement(\"div\", {\n          className: \"user_join\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, eachincoming.username, \" joined \")) : eachincoming.user !== username && eachincoming.content === undefined && React.createElement(\"div\", {\n          className: \"incoming_msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"incoming_msg_img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"https://ptetutorials.com/images/user-profile.png\",\n          alt: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"received_msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"received_withd_msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, eachincoming.message)))) || eachincoming.user === username && React.createElement(\"div\", {\n          className: \"outgoing_msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"sent_msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, eachincoming.message))) || eachincoming.content !== undefined && React.createElement(\"div\", {\n          className: \"user_join\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, eachincoming.content, \" \"));\n      })), this.state.clientConnected && !this.state.sentUser && React.createElement(\"div\", {\n        className: \"type_msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input_msg_write\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"write_msg\",\n        ref: function ref(el) {\n          return _this2.userId = el;\n        },\n        placeholder: \"Type your Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"msg_send_btn\",\n        type: \"button\",\n        onClick: function onClick(e) {\n          _this2.sendUser(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"send\")))), this.state.sentUser && React.createElement(\"div\", {\n        className: \"type_msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input_msg_write\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"write_msg\",\n        ref: function ref(el) {\n          return _this2.inputText = el;\n        },\n        placeholder: \"Type a message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"msg_send_btn\",\n        type: \"button\",\n        onClick: function onClick(e) {\n          _this2.sendMessage(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"send\"))))), React.createElement(SockJsClient, {\n        url: \"http://localhost:8080/operationsportal\",\n        topics: [\"/topic/all\", \"/topic/user\", \"/topic/message\"],\n        onMessage: this.onMessageReceive,\n        ref: function ref(client) {\n          _this2.clientRef = client;\n        },\n        onConnect: function onConnect() {\n          _this2.onConnect();\n        },\n        onDisconnect: function onDisconnect() {\n          _this2.setState({\n            clientConnected: false\n          });\n        },\n        debug: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SampleComponent;\n}(React.Component);\n\nSampleComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SampleComponent);","map":{"version":3,"sources":["/Users/dwarikay/Downloads/chat-mate-master/client-in-React/src/components/SampleComponent.js"],"names":["React","ReactDom","SockJsClient","UsernameGenerator","Fetch","TalkBox","Button","Icon","PropTypes","classNames","withStyles","Paper","moment","randomstring","require","styles","theme","root","mixins","gutters","paddingTop","spacing","unit","paddingBottom","button","margin","leftIcon","marginRight","rightIcon","marginLeft","marginTop","iconSmall","fontSize","SampleComponent","props","onMessageReceive","msg","topic","username","state","setState","prevState","messagesReceived","randomUserName","generateUsername","randomUserId","generate","sendUser","bind","sendMessage","clientConnected","messages","incomingMsgs","outgoingMsgs","sentUser","userList","messageList","welcomemsg","e","preventDefault","userId","value","trim","outgoingmsgs","push","clientRef","JSON","stringify","_subscribe","inputText","message","user","classes","date","Date","map","eachincoming","undefined","content","el","client","onConnect","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport SockJsClient from \"react-stomp\";\nimport UsernameGenerator from \"username-generator\";\nimport Fetch from \"json-fetch\";\nimport {TalkBox} from \"react-talk\";\nimport {Button} from \"@material-ui/core\";\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment';\nimport \"../chatContainer.css\";\n\n\nconst randomstring = require(\"randomstring\");\n\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: 0,\n        marginTop: 3,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass SampleComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        // randomUserId is used to emulate a unique user id for this demo usage\n        this.randomUserName = UsernameGenerator.generateUsername(\"-\");\n        this.randomUserId = randomstring.generate();\n\n        this.sendUser = this.sendUser.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n\n\n        this.state = {\n            clientConnected: false,\n            messages: [],\n            messagesReceived: [],\n            incomingMsgs: [],\n            outgoingMsgs: [],\n            sentUser: false,\n            username: \"\",\n            userList: [],\n            messageList: [],\n            welcomemsg: \"\",\n\n        };\n\n    }\n\n    onConnect(){\n        this.setState({clientConnected: true});\n\n        /*var url = stompClient.ws._transport.url;\n        url = url.replace(\n            \"ws://localhost:8080/spring-security-mvc-socket/secured/room/\",  \"\");\n        url = url.replace(\"/websocket\", \"\");\n        url = url.replace(/^[0-9]+\\//, \"\");\n        console.log(\"Your current session is: \" + url);\n        sessionId = url;*/\n\n\n    }\n\n    sendUser(e){\n        e.preventDefault();\n        const username = this.userId.value.trim();\n        const outgoingmsgs = this.state.outgoingMsgs;\n        outgoingmsgs.push(username)\n        this.setState({outgoingMsgs: outgoingmsgs, sentUser: true, username: username});\n        //this.clientRef.sendMessage(\"/app/register\", JSON.stringify({user: username, type: 'JOIN'}));\n        //this.clientRef.sendMessage(\"/secured/chat\", JSON.stringify({sender: username, type: 'JOIN'}));\n       // this.userName.value = \"\";\n       // this.clientRef.sendMessage(\"/user/\"+ username +\"/queue/position-updates\", JSON.stringify({user: username, type: 'JOIN'}));\n\n        this.clientRef.sendMessage(\"/app/user\", JSON.stringify({username: username}));\n\n        this.clientRef._subscribe(\"/topic/\"+username)\n\n\n    }\n\n    sendMessage(e){\n        e.preventDefault();\n        const msg = this.inputText.value.trim();\n        const username = this.state.username;\n        if(msg) {\n            this.clientRef.sendMessage(\"/app/message\", JSON.stringify({message: msg, user: username}));\n            this.inputText.value = '';\n        }\n    }\n\n    onMessageReceive = (msg, topic) => {\n        const username = this.state.username;\n            this.setState(prevState => ({\n                messagesReceived: [...prevState.messagesReceived, msg]\n            }));\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const messagesReceived = this.state.messagesReceived;\n        const username = this.state.username;\n        const date = new Date();\n\n        return (\n            <div className=\"container chatContainer\">\n                <div className=\"mesgs\">\n                    <div className=\"msg_history\">\n                        {messagesReceived  && messagesReceived.map((eachincoming) =>\n                            eachincoming.username !== undefined\n                            ?\n                                eachincoming.username !== username &&\n                                <div className=\"user_join\">\n                                    <p>{eachincoming.username} joined </p>\n                                </div>\n\n                            :\n                                eachincoming.user !== username && eachincoming.content === undefined &&\n                                    <div className=\"incoming_msg\">\n                                        <div className=\"incoming_msg_img\">\n                                            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"user\" />\n                                        </div>\n                                        <div className=\"received_msg\">\n                                            <div className=\"received_withd_msg\">\n                                                <p>{eachincoming.message}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ||\n\n                                eachincoming.user === username &&\n                                    <div className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                            <p>{eachincoming.message}</p>\n                                        </div>\n                                    </div>\n                                ||\n                                eachincoming.content !== undefined &&\n                                <div className=\"user_join\">\n                                    <p>{eachincoming.content} </p>\n                                </div>\n                            )}\n\n                    </div>\n\n                    { this.state.clientConnected && !this.state.sentUser &&\n                        <div className=\"type_msg\">\n                            <div className=\"input_msg_write\">\n                                <input type=\"text\" className=\"write_msg\" ref={(el) => this.userId = el}\n                                       placeholder=\"Type your Name\"/>\n                                <button className=\"msg_send_btn\" type=\"button\" onClick={(e) => {\n                                    this.sendUser(e)\n                                }}>\n                                    <Icon className={classes.rightIcon}>send</Icon>\n                                </button>\n                            </div>\n                        </div>\n                    }\n                    { this.state.sentUser &&\n                        <div className=\"type_msg\">\n                            <div className=\"input_msg_write\">\n                                <input type=\"text\" className=\"write_msg\" ref={(el) => this.inputText = el}\n                                       placeholder=\"Type a message\"/>\n                                <button className=\"msg_send_btn\" type=\"button\" onClick={(e) => {\n                                    this.sendMessage(e)\n                                }}>\n                                    <Icon className={classes.rightIcon}>send</Icon>\n                                </button>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <SockJsClient url=\"http://localhost:8080/operationsportal\" topics={[\"/topic/all\", \"/topic/user\", \"/topic/message\"]}\n                              onMessage={ this.onMessageReceive } ref={ (client) => { this.clientRef = client }}\n                              onConnect={ () => { this.onConnect() } }\n                              onDisconnect={ () => { this.setState({ clientConnected: false }) } }\n                              debug={ true }\n                />\n            </div>\n        );\n    }\n}\n\nSampleComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\n\nexport default withStyles(styles)(SampleComponent);\n"]},"metadata":{},"sourceType":"module"}